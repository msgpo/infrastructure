proxy_cache_path /cache/ levels=1:2 keys_zone=cache:4m max_size=10g inactive=720m use_temp_path=off;

limit_req_zone $binary_remote_addr zone=torrent:120m rate=1r/s;
limit_req_zone $binary_remote_addr zone=limited:60m rate=5r/s;
limit_req_zone $binary_remote_addr zone=standard:60m rate=10r/s;
limit_req_zone $binary_remote_addr zone=high:30m rate=20r/s;

upstream tracker {
        keepalive 16;
        server repository-1.internal.parrot.sh:443 weight=5 max_fails=2 fail_timeout=60;
        server repository-2.internal.parrot.sh:443 backup;
}

# redirect http to https
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
}

# redirect invalid websites
server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        server_name _;
        location ~ ^/(?<path>.*) {
                return 302 https://parrotsec.org/$path;
            }
}


# redirect secondary domains to main domain
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        server_name fzbx.io www.fzbx.io parrot.sh www.parrot.sh parrotsec.io www.parrotsec.io parrotlinux.com www.parrotlinux.com parrotlinux.net www.parrotlinux.net;
        location ~ ^/(?<path>.*) {
                return 302 https://parrotsec.org/$path;
        }
}

# redirect community to main domain
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        server_name community.parrot.sh community.parrotlinux.com community.parrotlinux.net community.parrotsec.io;
        location ~ ^/(?<path>.*) {
                return 302 https://community.parrotsec.org/$path;
            }
}


# main website
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        root /var/www/html;
        index index.php index.html;

        server_name www.* parrotsec.org parrotlinux.org;

        location / {
                try_files $uri $uri/ =404;
        }
        
        # redirect legacy download urls
        location /download.php {
                        return 301 https://parrotsec.org/download;
        }
        location /download-security.php {
                        return 301 https://parrotsec.org/download;
                }
        location /download-home.php {
                        return 301 https://parrotsec.org/download;
                }
        location /download-other.php {
                        return 301 https://parrotsec.org/download;
                }

        # deny access to unauthorized resources
        location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 404; }
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }
        location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }

}

# documentation website
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        root /var/www/html/docs;
        index index.php index.html;

        server_name docs.* documentation.*;

        location / {
                try_files $uri $uri/ =404;
        }

        # deny access to unauthorized resources
        location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 404; }
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }
        location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }

}

# old blog redirection
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;

        server_name blog.*;

        return 301 https://www.parrotsec.org/blog/$request_uri;
}

# speedtest
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;
        root /var/www/speedtest/;
        index index.php index.html;

        server_name speedtest.* speed.*;

        location / {
                try_files $uri $uri/ =404;
        }

        # deny access to unauthorized resources
        location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 404; }
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }
        location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }

}


# tracker
server {
        listen 80;
        listen [::]:80;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_tokens off;

        server_name tracker.* wolf.* torrent.* tracker2.* wolf2.* torrent2.*;

        location / {
                proxy_pass https://tracker;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                include snippets/cache-buffer.conf;
        }

        # deny access to unauthorized resources
        location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 404; }
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }
        location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 404; }

}